CREATE TABLE IF NOT EXISTS user (
    user_id INTEGER PRIMARY KEY AUTOINCREMENT,
    email TEXT UNIQUE NOT NULL,
    password TEXT NOT NULL,
    weight REAL,
    birth_date TEXT,
    gender TEXT CHECK(gender IN ('male', 'female', 'other', 'prefer_not_to_say')),
    created_at TEXT DEFAULT (datetime('now'))
);

-- Tabla workout
CREATE TABLE IF NOT EXISTS workout (
    workout_id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,
    planned_date TEXT,              -- DATETIME en SQLite es TEXT
    actual_start TEXT,              -- DATETIME en SQLite es TEXT
    actual_end TEXT,                -- DATETIME en SQLite es TEXT
    workout_type TEXT,              -- VARCHAR en SQLite es TEXT
    status TEXT NOT NULL CHECK(status IN ('planned', 'completed', 'missed', 'ad_hoc')),
    total_calories REAL,            -- DECIMAL en SQLite es REAL
    notes TEXT,
    created_at TEXT DEFAULT (datetime('now')),
    FOREIGN KEY (user_id) REFERENCES user(user_id) ON DELETE CASCADE
);

-- Tabla workout_exercise
CREATE TABLE IF NOT EXISTS workout_exercise (
    workout_exercise_id INTEGER PRIMARY KEY AUTOINCREMENT,
    workout_id INTEGER NOT NULL,
    exercise_id INTEGER NOT NULL,
    sets INTEGER,                   -- INT en SQLite es INTEGER
    repetitions INTEGER,
    actual_duration INTEGER,
    rest_period INTEGER,
    execution_order INTEGER NOT NULL,
    completed INTEGER DEFAULT 0,    -- BOOLEAN en SQLite es INTEGER (0 o 1)
    notes TEXT,
    FOREIGN KEY (workout_id) REFERENCES workout(workout_id) ON DELETE CASCADE,
    FOREIGN KEY (exercise_id) REFERENCES exercise(exercise_id),
    UNIQUE (workout_id, execution_order)
);

-- Tabla exercise
CREATE TABLE IF NOT EXISTS exercise (
    exercise_id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,             -- VARCHAR en SQLite es TEXT
    img_url TEXT,
    description_text TEXT,
    muscle_group_name TEXT NOT NULL,
    created_at TEXT DEFAULT (datetime('now')),
    FOREIGN KEY (muscle_group_name) REFERENCES muscle_group(muscle_group_name)
);

-- Tabla muscle_group
CREATE TABLE IF NOT EXISTS muscle_group (
    muscle_group_name TEXT PRIMARY KEY,
    base_calories_rate REAL NOT NULL
);

-- Tabla exercise_muscle_group
CREATE TABLE IF NOT EXISTS exercise_muscle_group (
    exercise_id INTEGER NOT NULL,
    muscle_group_name TEXT NOT NULL,
    PRIMARY KEY (exercise_id, muscle_group_name),
    FOREIGN KEY (exercise_id) REFERENCES exercise(exercise_id) ON DELETE CASCADE,
    FOREIGN KEY (muscle_group_name) REFERENCES muscle_group(muscle_group_name)
);

-- √çndices (manteniendo los nombres consistentes)
CREATE INDEX IF NOT EXISTS idx_user_email ON user(email);
CREATE INDEX IF NOT EXISTS idx_workout_user ON workout(user_id);
CREATE INDEX IF NOT EXISTS idx_workout_status ON workout(status);
CREATE INDEX IF NOT EXISTS idx_workout_dates ON workout(planned_date, actual_start);
CREATE INDEX IF NOT EXISTS idx_exercise_muscle ON exercise(muscle_group_name);
CREATE INDEX IF NOT EXISTS idx_workout_exercise ON workout_exercise(workout_id, exercise_id);